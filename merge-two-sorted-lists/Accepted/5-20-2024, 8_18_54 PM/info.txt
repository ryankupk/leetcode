{"id":1263576475,"question_id":21,"lang":"python3","lang_name":"Python3","time":"2 weeks, 2 days","timestamp":1716257934,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/1263576475/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"16.6 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nfrom copy import copy\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        if list1 is None and list2 is None:\n            return \n\n        new_list = ListNode()\n        new_list_head = new_list\n\n        while (list1 is not None or list2 is not None):\n            if list1 is None:\n                while list2 is not None:\n                    new_list.next = ListNode(list2.val)\n                    new_list = new_list.next\n                    list2 = list2.next\n                break\n            if list2 is None:\n                while list1 is not None:\n                    new_list.next = ListNode(list1.val)\n                    new_list = new_list.next\n                    list1 = list1.next\n                break\n            if list1.val <= list2.val:\n                new_list.next = ListNode(list1.val)\n                new_list = new_list.next\n                list1 = list1.next\n            else:\n                new_list.next = ListNode(list2.val)\n                new_list = new_list.next\n                list2 = list2.next\n\n        return new_list_head.next","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}