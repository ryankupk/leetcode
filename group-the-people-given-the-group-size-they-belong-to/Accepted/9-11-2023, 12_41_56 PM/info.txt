{"id":1046797063,"question_id":1407,"lang":"ruby","lang_name":"Ruby","time":"8 months, 4 weeks","timestamp":1694457716,"status":10,"status_display":"Accepted","runtime":"142 ms","url":"/submissions/detail/1046797063/","is_pending":"Not Pending","title":"Group the People Given the Group Size They Belong To","memory":"211 MB","code":"# @param {Integer[]} group_sizes\n# @return {Integer[][]}\ndef group_the_people(group_sizes)\n    groups = []\n    groups_hash = {} # group_size => [ [ group_one ], [ group_two ] ]\n    \"\"\"\n    {\n        2 => [ [0, 5] ],\n        1 => [ [1] ],\n        3 => [ [2, 3, 4] ]\n    }\n    \"\"\"\n    group_sizes.each_with_index do | group_size, person_id | \n        if groups_hash.has_key? group_size\n\n            groups_full = true\n            groups_hash[group_size].each do | groups_list |\n\n                if groups_list.size != group_size\n                    groups_list << person_id\n                    groups_full = false\n                end\n\n            end\n            \n            if groups_full == true\n\n                groups_hash[group_size] << [person_id]\n\n            end\n        else\n\n            groups_hash[group_size] = [[person_id]]\n\n        end\n    end\n\n    groups_hash.each do | group_size, groups_of_group_size |\n        groups_of_group_size.each do | group |\n            groups << group\n        end\n    end\n    return groups\nend","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-the-people-given-the-group-size-they-belong-to","has_notes":false,"flag_type":1}