{"id":1272953958,"question_id":38,"lang":"python3","lang_name":"Python3","time":"6Â days, 15Â hours","timestamp":1717131480,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1272953958/","is_pending":"Not Pending","title":"Count and Say","memory":"16.7 MB","code":"class Solution:\r\n    # n = 1: return 1 is the base case\r\n    # n = 2: return count of last entry i.e. 1 1\r\n    # n = 3: return count of last entry i.e. two 1's so 21\r\n    # n=4: we have one 2 and one 1 so 1211   \r\n    def countAndSay(self, n: int) -> str:\r\n        dp = [\"1\"] * n\r\n        def get_rle(chars):\r\n            sets = []\r\n            prev_char = None\r\n            new_string = \"\"\r\n\r\n            for char in chars:\r\n                if char != prev_char:\r\n                    prev_char = char\r\n                    sets.append([])\r\n                \r\n                sets[-1].append(char)\r\n            \r\n            for set in sets:\r\n                new_string += str(len(set))\r\n                new_string += set[0]\r\n            \r\n            # prev_char = None\r\n            # prev_char_count = 1\r\n            # new_string = \"\"\r\n            # for char in chars:\r\n            #     if char == prev_char:\r\n            #         prev_char_count += 1\r\n            #         continue\r\n            #     else:\r\n            #         new_string += prev_char\r\n            #         new_string += prev_char_count\r\n            #         prev_char_count = 0\r\n            #         prev_char = char\r\n            # print(f\"{sets=}\")\r\n            # print(f\"{new_string=}\")\r\n            return new_string\r\n\r\n\r\n        for i in range(1, n):\r\n            dp[i] = get_rle(str(dp[i-1]))\r\n                    \r\n        # print(f\"{dp=}\")\r\n        return dp[-1]\r\n\r\n                \r\n            \r\n        ","compare_result":"111111111111111111111111111111","title_slug":"count-and-say","has_notes":false,"flag_type":1}