{"id":1260004278,"question_id":2416,"lang":"python3","lang_name":"Python3","time":"2 weeks, 6 days","timestamp":1715894960,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1260004278/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"16.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def evaluateTree(self, root: Optional[TreeNode]) -> bool:\n        def traverse(root):\n            if root is None:\n                return\n            if root.val == 0:\n                return False\n            if root.val == 1:\n                return True\n            l = traverse(root.left)\n            r = traverse(root.right)\n            if root.val == 2:\n                return l or r\n            elif root.val == 3:\n                return l and r\n            \n        \n        fin = traverse(root)\n        return fin","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"flag_type":1}