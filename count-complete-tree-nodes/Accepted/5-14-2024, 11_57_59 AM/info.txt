{"id":1258057270,"question_id":222,"lang":"python3","lang_name":"Python3","time":"3 weeks, 2 days","timestamp":1715709479,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/1258057270/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"21.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def traverse_tree(self, root, nodes): \n        # print(f\"{nodes=}\")\n        if root.left is None and root.right is None:\n            nodes.append(root.val)\n        else:\n            nodes.append(root.val)\n            if root.left is not None:\n                self.traverse_tree(root.left, nodes)\n            if root.right is not None:\n                self.traverse_tree(root.right, nodes)\n\n\n    def countNodes(self, root: Optional[TreeNode]) -> int:\n        if root is None: return 0\n        if root.left is None and root.right is None: return 1\n        nodes = []\n        self.traverse_tree(root, nodes)\n        return len(nodes)","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false,"flag_type":1}