{"id":1277029293,"question_id":535,"lang":"python3","lang_name":"Python3","time":"2 days, 15 hours","timestamp":1717475230,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/1277029293/","is_pending":"Not Pending","title":"Encode and Decode TinyURL","memory":"16.4 MB","code":"class Codec:\r\n\r\n    def encode(self, longUrl: str) -> str:\r\n        \"\"\"Encodes a URL to a shortened URL.\r\n        \"\"\"\r\n        return longUrl\r\n        \r\n\r\n    def decode(self, shortUrl: str) -> str:\r\n        \"\"\"Decodes a shortened URL to its original URL.\r\n        \"\"\"\r\n        return shortUrl\r\n        \r\n\r\n# Your Codec object will be instantiated and called as such:\r\n# codec = Codec()\r\n# codec.decode(codec.encode(url))","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"encode-and-decode-tinyurl","has_notes":false,"flag_type":1}