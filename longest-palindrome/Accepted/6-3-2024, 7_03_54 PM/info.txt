{"id":1276898308,"question_id":409,"lang":"python3","lang_name":"Python3","time":"2 days, 19 hours","timestamp":1717463034,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/1276898308/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"16.8 MB","code":"from collections import Counter\r\nclass Solution:\r\n    def longestPalindrome(self, s: str) -> int:\r\n        if len(s) == 0: return 0\r\n        if len(s) == 1: return 1\r\n        \r\n        counts = Counter(s)\r\n        print(counts)\r\n        # sorted_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)\r\n        # print(sorted_counts)\r\n        length = 0\r\n        remainder = 0\r\n        for _, count in counts.items():\r\n            if count >= 2:\r\n                length += count - (count % 2)\r\n                remainder += count % 2\r\n            else:\r\n                print(f\"count < 2 and {count=}\")\r\n                remainder += count\r\n                \r\n        if length % 2 == 0 and remainder > 0:\r\n            length += 1\r\n        \r\n        return length\r\n                \r\n                \r\n\r\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}