{"id":1111106245,"question_id":1112,"lang":"python3","lang_name":"Python3","time":"6Â months","timestamp":1701557985,"status":10,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/1111106245/","is_pending":"Not Pending","title":"Find Words That Can Be Formed by Characters","memory":"16.9 MB","code":"from collections import Counter\n\nclass Solution:\n    def countCharacters(self, words: List[str], chars: str) -> int:\n        total_lengths = 0\n        char_counts = Counter(chars)\n        for word in words:\n            word_counts = Counter(word)\n            for char, count in word_counts.items():\n                if char not in char_counts or char_counts[char] < count:\n                    break\n            else: total_lengths += len(word)\n\n        return total_lengths\n\n\n\"\"\"\n{\n    a: 2,\n    t: 1,\n    c: 1,\n    h: 1\n}\n{\n    c: 1,\n    a: 1,\n    t: 1\n}\n\"\"\"","compare_result":"111111111111111111111111111111111111","title_slug":"find-words-that-can-be-formed-by-characters","has_notes":false,"flag_type":1}