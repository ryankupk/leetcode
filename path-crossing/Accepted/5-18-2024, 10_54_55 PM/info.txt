{"id":1261920997,"question_id":1619,"lang":"python3","lang_name":"Python3","time":"2 weeks, 4 days","timestamp":1716094495,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1261920997/","is_pending":"Not Pending","title":"Path Crossing","memory":"16.6 MB","code":"from copy import copy\nclass Solution:\n    def isPathCrossing(self, path: str) -> bool:\n        pos = [0,0]\n        visited = []\n        visited.append(copy(pos))\n        for direction in path:\n            if direction == \"N\":\n                pos[0] += 1\n            if direction == \"E\":\n                pos[1] += 1\n            if direction == \"S\":\n                pos[0] -= 1\n            if direction == \"W\":\n                pos[1] -= 1\n            if pos in visited:\n                print(f\"{pos=}\")\n                return True\n            else:\n                visited.append(copy(pos))\n            \n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-crossing","has_notes":false,"flag_type":1}