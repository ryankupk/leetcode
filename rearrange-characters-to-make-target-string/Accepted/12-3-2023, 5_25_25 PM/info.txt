{"id":1111803901,"question_id":2372,"lang":"python3","lang_name":"Python3","time":"6Â months","timestamp":1701649525,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/1111803901/","is_pending":"Not Pending","title":"Rearrange Characters to Make Target String","memory":"16.2 MB","code":"from collections import Counter\nfrom math import floor\n\nclass Solution:\n    def rearrangeCharacters(self, s: str, target: str) -> int:\n        if len(set(target).difference(set(s))) > 0: return 0\n        s_counts = Counter(s)\n        target_counts = Counter(target)\n        min_possible = float('inf')\n        for s_char, s_count in s_counts.items():\n            if s_char not in target: continue\n            if s_count >= target_counts[s_char]:\n                min_possible = floor(s_count // target_counts[s_char]) if floor(s_count // target_counts[s_char]) < min_possible else min_possible\n            else: return 0\n        return min_possible\n        # return min([count for char, count in s_counts.items() if char in target]) if len(set(target)) == len(target)\n\n\n\"\"\"\n{\n    a: 2,\n    b: 2,\n    c: 1\n}\n\"\"\"","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rearrange-characters-to-make-target-string","has_notes":false,"flag_type":1}