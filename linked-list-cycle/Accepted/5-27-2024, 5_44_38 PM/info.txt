{"id":1269887631,"question_id":141,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1716853478,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1269887631/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"19 MB","code":"# Definition for singly-linked list.\r\n# class ListNode:\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.next = None\r\n\r\nclass Solution:\r\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\r\n        if not head:\r\n            return False\r\n        slow = head\r\n        fast = head.next\r\n        while slow != fast:\r\n            if not fast or not fast.next:\r\n                return False\r\n            slow = slow.next\r\n            fast = fast.next.next\r\n        return True\r\n        ","compare_result":"11111111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}