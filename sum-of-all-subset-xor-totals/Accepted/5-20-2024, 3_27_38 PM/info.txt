{"id":1263457348,"question_id":1993,"lang":"python3","lang_name":"Python3","time":"2 weeks, 2 days","timestamp":1716240458,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/1263457348/","is_pending":"Not Pending","title":"Sum of All Subset XOR Totals","memory":"17.1 MB","code":"class Solution:\n    def subsetXORSum(self, nums: List[int]) -> int:\n        \n        xor_sum = 0\n        subsets = []\n        def generate_subsets(nums, current_subset, index, subsets):\n            if index == len(nums):\n                subsets.append(current_subset[:])\n                return\n\n            current_subset.append(nums[index])\n            generate_subsets(nums, current_subset, index + 1, subsets)\n\n            current_subset.pop()\n            generate_subsets(nums, current_subset, index + 1, subsets)\n\n        generate_subsets(nums, [], 0, subsets)\n        for arr_subset in subsets:\n            if len(arr_subset) > 0:\n                xor_sum += reduce(lambda x, y: x ^ y, arr_subset)\n\n        return xor_sum","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"sum-of-all-subset-xor-totals","has_notes":false,"flag_type":1}